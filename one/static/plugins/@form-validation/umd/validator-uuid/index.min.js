/**
 * FormValidation (https://formvalidation.io)
 * The best validation library for JavaScript
 * (c) 2013 - 2023 Nguyen Huu Phuoc <me@phuoc.ng>
 *
 * @license https://formvalidation.io/license
 * @package @form-validation/validator-uuid
 * @version 2.0.2
 */

!(function (i, e) {
  'object' == typeof exports && 'undefined' != typeof module
    ? (module.exports = e(require('@form-validation/core')))
    : 'function' == typeof define && define.amd
      ? define(['@form-validation/core'], e)
      : (((i =
          'undefined' != typeof globalThis
            ? globalThis
            : i || self).FormValidation = i.FormValidation || {}),
        (i.FormValidation.validators = i.FormValidation.validators || {}),
        (i.FormValidation.validators.uuid = e(i.FormValidation)));
})(this, function (i) {
  'use strict';
  var e = i.utils.format;
  return function () {
    return {
      validate: function (i) {
        if ('' === i.value) return { valid: !0 };
        var o = Object.assign({}, { message: '' }, i.options),
          a = {
            3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
            4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
            5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
            all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
          },
          n = o.version ? ''.concat(o.version) : 'all';
        return {
          message: o.version
            ? e(
                i.l10n ? o.message || i.l10n.uuid.version : o.message,
                o.version,
              )
            : i.l10n
              ? i.l10n.uuid.default
              : o.message,
          valid: null === a[n] || a[n].test(i.value),
        };
      },
    };
  };
});
