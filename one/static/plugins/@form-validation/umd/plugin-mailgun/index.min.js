/**
 * FormValidation (https://formvalidation.io)
 * The best validation library for JavaScript
 * (c) 2013 - 2023 Nguyen Huu Phuoc <me@phuoc.ng>
 *
 * @license https://formvalidation.io/license
 * @package @form-validation/plugin-mailgun
 * @version 2.0.2
 */

!(function (e, i) {
  'object' == typeof exports && 'undefined' != typeof module
    ? (module.exports = i(
        require('@form-validation/core'),
        require('@form-validation/plugin-alias'),
      ))
    : 'function' == typeof define && define.amd
      ? define(['@form-validation/core', '@form-validation/plugin-alias'], i)
      : (((e =
          'undefined' != typeof globalThis
            ? globalThis
            : e || self).FormValidation = e.FormValidation || {}),
        (e.FormValidation.plugins = e.FormValidation.plugins || {}),
        (e.FormValidation.plugins.Mailgun = i(
          e.FormValidation,
          e.FormValidation.plugins,
        )));
})(this, function (e, i) {
  'use strict';
  var t = function (e, i) {
    return (
      (t =
        Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array &&
          function (e, i) {
            e.__proto__ = i;
          }) ||
        function (e, i) {
          for (var t in i)
            Object.prototype.hasOwnProperty.call(i, t) && (e[t] = i[t]);
        }),
      t(e, i)
    );
  };
  return (function (e) {
    function o(i) {
      var t = e.call(this, i) || this;
      return (
        (t.opts = Object.assign({}, { suggestion: !1 }, i)),
        (t.messageDisplayedHandler = t.onMessageDisplayed.bind(t)),
        t
      );
    }
    return (
      (function (e, i) {
        if ('function' != typeof i && null !== i)
          throw new TypeError(
            'Class extends value ' +
              String(i) +
              ' is not a constructor or null',
          );
        function o() {
          this.constructor = e;
        }
        t(e, i),
          (e.prototype =
            null === i
              ? Object.create(i)
              : ((o.prototype = i.prototype), new o()));
      })(o, e),
      (o.prototype.install = function () {
        this.opts.suggestion &&
          this.core.on(
            'plugins.message.displayed',
            this.messageDisplayedHandler,
          );
        this.core
          .registerPlugin('___mailgunAlias', new i.Alias({ mailgun: 'remote' }))
          .addField(this.opts.field, {
            validators: {
              mailgun: {
                crossDomain: !0,
                data: { api_key: this.opts.apiKey },
                headers: { 'Content-Type': 'application/json' },
                message: this.opts.message,
                name: 'address',
                url: 'https://api.mailgun.net/v3/address/validate',
                validKey: 'is_valid',
              },
            },
          });
      }),
      (o.prototype.uninstall = function () {
        this.opts.suggestion &&
          this.core.off(
            'plugins.message.displayed',
            this.messageDisplayedHandler,
          ),
          this.core.removeField(this.opts.field);
      }),
      (o.prototype.onMessageDisplayed = function (e) {
        e.field === this.opts.field &&
          'mailgun' === e.validator &&
          e.meta &&
          e.meta.did_you_mean &&
          (e.messageElement.innerHTML = 'Did you mean '.concat(
            e.meta.did_you_mean,
            '?',
          ));
      }),
      o
    );
  })(e.Plugin);
});
