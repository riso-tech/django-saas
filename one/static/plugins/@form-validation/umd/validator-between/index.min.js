/**
 * FormValidation (https://formvalidation.io)
 * The best validation library for JavaScript
 * (c) 2013 - 2023 Nguyen Huu Phuoc <me@phuoc.ng>
 *
 * @license https://formvalidation.io/license
 * @package @form-validation/validator-between
 * @version 2.0.2
 */

!function(e,a){"object"==typeof exports&&"undefined"!=typeof module?module.exports=a(require("@form-validation/core")):"function"==typeof define&&define.amd?define(["@form-validation/core"],a):((e="undefined"!=typeof globalThis?globalThis:e||self).FormValidation=e.FormValidation||{},e.FormValidation.validators=e.FormValidation.validators||{},e.FormValidation.validators.between=a(e.FormValidation))}(this,(function(e){"use strict";var a=e.utils.format;return function(){var e=function(e){return parseFloat("".concat(e).replace(",","."))};return{validate:function(o){var t=o.value;if(""===t)return{valid:!0};var n=Object.assign({},{inclusive:!0,message:""},o.options),i=e(n.min),r=e(n.max);return n.inclusive?{message:a(o.l10n?n.message||o.l10n.between.default:n.message,["".concat(i),"".concat(r)]),valid:parseFloat(t)>=i&&parseFloat(t)<=r}:{message:a(o.l10n?n.message||o.l10n.between.notInclusive:n.message,["".concat(i),"".concat(r)]),valid:parseFloat(t)>i&&parseFloat(t)<r}}}}}));
