/**
 * FormValidation (https://formvalidation.io)
 * The best validation library for JavaScript
 * (c) 2013 - 2023 Nguyen Huu Phuoc <me@phuoc.ng>
 *
 * @license https://formvalidation.io/license
 * @package @form-validation/validator-numeric
 * @version 2.0.2
 */

'use strict';
exports.numeric = function () {
  return {
    validate: function (a) {
      if ('' === a.value) return { valid: !0 };
      var r = Object.assign(
          {},
          { decimalSeparator: '.', thousandsSeparator: '' },
          a.options,
        ),
        t = ''.concat(a.value);
      t.substr(0, 1) === r.decimalSeparator
        ? (t = '0'.concat(r.decimalSeparator).concat(t.substr(1)))
        : t.substr(0, 2) === '-'.concat(r.decimalSeparator) &&
          (t = '-0'.concat(r.decimalSeparator).concat(t.substr(2)));
      var e = '.' === r.decimalSeparator ? '\\.' : r.decimalSeparator,
        c = '.' === r.thousandsSeparator ? '\\.' : r.thousandsSeparator,
        o = new RegExp(
          '^-?[0-9]{1,3}('.concat(c, '[0-9]{3})*(').concat(e, '[0-9]+)?$'),
        ),
        n = new RegExp(c, 'g');
      if (!o.test(t)) return { valid: !1 };
      c && (t = t.replace(n, '')), e && (t = t.replace(e, '.'));
      var s = parseFloat(t);
      return { valid: !isNaN(s) && isFinite(s) };
    },
  };
};
