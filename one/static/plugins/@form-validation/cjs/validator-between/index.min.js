/**
 * FormValidation (https://formvalidation.io)
 * The best validation library for JavaScript
 * (c) 2013 - 2023 Nguyen Huu Phuoc <me@phuoc.ng>
 *
 * @license https://formvalidation.io/license
 * @package @form-validation/validator-between
 * @version 2.0.2
 */

'use strict';
var e = require('@form-validation/core').utils.format;
exports.between = function () {
  var a = function (e) {
    return parseFloat(''.concat(e).replace(',', '.'));
  };
  return {
    validate: function (t) {
      var n = t.value;
      if ('' === n) return { valid: !0 };
      var s = Object.assign({}, { inclusive: !0, message: '' }, t.options),
        r = a(s.min),
        i = a(s.max);
      return s.inclusive
        ? {
            message: e(
              t.l10n ? s.message || t.l10n.between.default : s.message,
              [''.concat(r), ''.concat(i)],
            ),
            valid: parseFloat(n) >= r && parseFloat(n) <= i,
          }
        : {
            message: e(
              t.l10n ? s.message || t.l10n.between.notInclusive : s.message,
              [''.concat(r), ''.concat(i)],
            ),
            valid: parseFloat(n) > r && parseFloat(n) < i,
          };
    },
  };
};
