/**
 * FormValidation (https://formvalidation.io)
 * The best validation library for JavaScript
 * (c) 2013 - 2023 Nguyen Huu Phuoc <me@phuoc.ng>
 *
 * @license https://formvalidation.io/license
 * @package @form-validation/validator-uuid
 * @version 2.0.2
 */

'use strict';
var e = require('@form-validation/core').utils.format;
exports.uuid = function () {
  return {
    validate: function (i) {
      if ('' === i.value) return { valid: !0 };
      var s = Object.assign({}, { message: '' }, i.options),
        A = {
          3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
          4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
          5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
          all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
        },
        a = s.version ? ''.concat(s.version) : 'all';
      return {
        message: s.version
          ? e(i.l10n ? s.message || i.l10n.uuid.version : s.message, s.version)
          : i.l10n
            ? i.l10n.uuid.default
            : s.message,
        valid: null === A[a] || A[a].test(i.value),
      };
    },
  };
};
