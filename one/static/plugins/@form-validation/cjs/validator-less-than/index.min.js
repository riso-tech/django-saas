/**
 * FormValidation (https://formvalidation.io)
 * The best validation library for JavaScript
 * (c) 2013 - 2023 Nguyen Huu Phuoc <me@phuoc.ng>
 *
 * @license https://formvalidation.io/license
 * @package @form-validation/validator-less-than
 * @version 2.0.2
 */

'use strict';
var e = require('@form-validation/core').utils.format;
exports.lessThan = function () {
  return {
    validate: function (a) {
      if ('' === a.value) return { valid: !0 };
      var s = Object.assign({}, { inclusive: !0, message: '' }, a.options),
        l = parseFloat(''.concat(s.max).replace(',', '.'));
      return s.inclusive
        ? {
            message: e(
              a.l10n ? s.message || a.l10n.lessThan.default : s.message,
              ''.concat(l),
            ),
            valid: parseFloat(a.value) <= l,
          }
        : {
            message: e(
              a.l10n ? s.message || a.l10n.lessThan.notInclusive : s.message,
              ''.concat(l),
            ),
            valid: parseFloat(a.value) < l,
          };
    },
  };
};
