/**
 * FormValidation (https://formvalidation.io)
 * The best validation library for JavaScript
 * (c) 2013 - 2023 Nguyen Huu Phuoc <me@phuoc.ng>
 *
 * @license https://formvalidation.io/license
 * @package @form-validation/plugin-password-strength
 * @version 2.0.2
 */

'use strict';
var t = require('@form-validation/core'),
  a = function (t, e) {
    return (
      (a =
        Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array &&
          function (t, a) {
            t.__proto__ = a;
          }) ||
        function (t, a) {
          for (var e in a)
            Object.prototype.hasOwnProperty.call(a, e) && (t[e] = a[e]);
        }),
      a(t, e)
    );
  };
var e = (function (t) {
  function e(a) {
    var e = t.call(this, a) || this;
    return (
      (e.opts = Object.assign(
        {},
        { minimalScore: 3, onValidated: function () {} },
        a,
      )),
      (e.validatePassword = e.checkPasswordStrength.bind(e)),
      (e.validatorValidatedHandler = e.onValidatorValidated.bind(e)),
      e
    );
  }
  return (
    (function (t, e) {
      if ('function' != typeof e && null !== e)
        throw new TypeError(
          'Class extends value ' + String(e) + ' is not a constructor or null',
        );
      function r() {
        this.constructor = t;
      }
      a(t, e),
        (t.prototype =
          null === e
            ? Object.create(e)
            : ((r.prototype = e.prototype), new r()));
    })(e, t),
    (e.prototype.install = function () {
      var t;
      this.core.registerValidator(
        e.PASSWORD_STRENGTH_VALIDATOR,
        this.validatePassword,
      ),
        this.core.on(
          'core.validator.validated',
          this.validatorValidatedHandler,
        ),
        this.core.addField(this.opts.field, {
          validators:
            ((t = {}),
            (t[e.PASSWORD_STRENGTH_VALIDATOR] = {
              message: this.opts.message,
              minimalScore: this.opts.minimalScore,
            }),
            t),
        });
    }),
    (e.prototype.uninstall = function () {
      this.core.off('core.validator.validated', this.validatorValidatedHandler),
        this.core.disableValidator(
          this.opts.field,
          e.PASSWORD_STRENGTH_VALIDATOR,
        );
    }),
    (e.prototype.checkPasswordStrength = function () {
      var t = this;
      return {
        validate: function (a) {
          var e = a.value;
          if ('' === e) return { valid: !0 };
          var r = zxcvbn(e),
            o = r.score,
            i = r.feedback.warning || 'The password is weak';
          return o < t.opts.minimalScore
            ? { message: i, meta: { message: i, score: o }, valid: !1 }
            : { meta: { message: i, score: o }, valid: !0 };
        },
      };
    }),
    (e.prototype.onValidatorValidated = function (t) {
      if (
        t.field === this.opts.field &&
        t.validator === e.PASSWORD_STRENGTH_VALIDATOR &&
        t.result.meta
      ) {
        var a = t.result.meta.message,
          r = t.result.meta.score;
        this.opts.onValidated(t.result.valid, a, r);
      }
    }),
    (e.PASSWORD_STRENGTH_VALIDATOR = '___PasswordStrengthValidator'),
    e
  );
})(t.Plugin);
exports.PasswordStrength = e;
