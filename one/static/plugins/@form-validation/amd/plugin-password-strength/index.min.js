/**
 * FormValidation (https://formvalidation.io)
 * The best validation library for JavaScript
 * (c) 2013 - 2023 Nguyen Huu Phuoc <me@phuoc.ng>
 *
 * @license https://formvalidation.io/license
 * @package @form-validation/plugin-password-strength
 * @version 2.0.2
 */

define(['exports', '@form-validation/core'], function (t, a) {
  'use strict';
  var e = function (t, a) {
    return (
      (e =
        Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array &&
          function (t, a) {
            t.__proto__ = a;
          }) ||
        function (t, a) {
          for (var e in a)
            Object.prototype.hasOwnProperty.call(a, e) && (t[e] = a[e]);
        }),
      e(t, a)
    );
  };
  var o = (function (t) {
    function a(a) {
      var e = t.call(this, a) || this;
      return (
        (e.opts = Object.assign(
          {},
          { minimalScore: 3, onValidated: function () {} },
          a,
        )),
        (e.validatePassword = e.checkPasswordStrength.bind(e)),
        (e.validatorValidatedHandler = e.onValidatorValidated.bind(e)),
        e
      );
    }
    return (
      (function (t, a) {
        if ('function' != typeof a && null !== a)
          throw new TypeError(
            'Class extends value ' +
              String(a) +
              ' is not a constructor or null',
          );
        function o() {
          this.constructor = t;
        }
        e(t, a),
          (t.prototype =
            null === a
              ? Object.create(a)
              : ((o.prototype = a.prototype), new o()));
      })(a, t),
      (a.prototype.install = function () {
        var t;
        this.core.registerValidator(
          a.PASSWORD_STRENGTH_VALIDATOR,
          this.validatePassword,
        ),
          this.core.on(
            'core.validator.validated',
            this.validatorValidatedHandler,
          ),
          this.core.addField(this.opts.field, {
            validators:
              ((t = {}),
              (t[a.PASSWORD_STRENGTH_VALIDATOR] = {
                message: this.opts.message,
                minimalScore: this.opts.minimalScore,
              }),
              t),
          });
      }),
      (a.prototype.uninstall = function () {
        this.core.off(
          'core.validator.validated',
          this.validatorValidatedHandler,
        ),
          this.core.disableValidator(
            this.opts.field,
            a.PASSWORD_STRENGTH_VALIDATOR,
          );
      }),
      (a.prototype.checkPasswordStrength = function () {
        var t = this;
        return {
          validate: function (a) {
            var e = a.value;
            if ('' === e) return { valid: !0 };
            var o = zxcvbn(e),
              r = o.score,
              i = o.feedback.warning || 'The password is weak';
            return r < t.opts.minimalScore
              ? { message: i, meta: { message: i, score: r }, valid: !1 }
              : { meta: { message: i, score: r }, valid: !0 };
          },
        };
      }),
      (a.prototype.onValidatorValidated = function (t) {
        if (
          t.field === this.opts.field &&
          t.validator === a.PASSWORD_STRENGTH_VALIDATOR &&
          t.result.meta
        ) {
          var e = t.result.meta.message,
            o = t.result.meta.score;
          this.opts.onValidated(t.result.valid, e, o);
        }
      }),
      (a.PASSWORD_STRENGTH_VALIDATOR = '___PasswordStrengthValidator'),
      a
    );
  })(a.Plugin);
  t.PasswordStrength = o;
});
