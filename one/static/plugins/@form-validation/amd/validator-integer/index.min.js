/**
 * FormValidation (https://formvalidation.io)
 * The best validation library for JavaScript
 * (c) 2013 - 2023 Nguyen Huu Phuoc <me@phuoc.ng>
 *
 * @license https://formvalidation.io/license
 * @package @form-validation/validator-integer
 * @version 2.0.2
 */

define(['exports'], function (a) {
  'use strict';
  a.integer = function () {
    return {
      validate: function (a) {
        if ('' === a.value) return { valid: !0 };
        var e = Object.assign(
            {},
            { decimalSeparator: '.', thousandsSeparator: '' },
            a.options,
          ),
          t = '.' === e.decimalSeparator ? '\\.' : e.decimalSeparator,
          r = '.' === e.thousandsSeparator ? '\\.' : e.thousandsSeparator,
          n = new RegExp(
            '^-?[0-9]{1,3}('.concat(r, '[0-9]{3})*(').concat(t, '[0-9]+)?$'),
          ),
          i = new RegExp(r, 'g'),
          o = ''.concat(a.value);
        if (!n.test(o)) return { valid: !1 };
        r && (o = o.replace(i, '')), t && (o = o.replace(t, '.'));
        var c = parseFloat(o);
        return { valid: !isNaN(c) && isFinite(c) && Math.floor(c) === c };
      },
    };
  };
});
